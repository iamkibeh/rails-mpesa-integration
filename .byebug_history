c
JSON.parse(payload)['BusinessShortCode']
JSON.parse(payload)
JSON.generate?(payload)
JSON.generate(payload)
JSON.parse(payload)
payload.to_json
payload.BusinessShortCode
payload[:'BusinessShortCode']
payload['BusinessShortCode']
payload
c
payload
c
require 'byebug'
require 'byebug
require 'rest-client'
require 'rest-client' = true
require 'rest-client'
c
response
c
response = RestClient::Request.execute(method: :post, url: url, payload: payload, headers: headers)
response
c
headers
c
    }
      Authorization: "Basic #{get_access_token}"
      content_type: "application/json",
  headers = {
    }
      Authorization: "Basic #{get_access_token}"
      content_type: "application/json",
headers = {
    }
      Authorization: "Basic #{get_access_token}"
      content_type: "application/json",
headers = {
get_access_token
headers
payload
c
get_access_token
c
generate_access_token_request.code
generate_access_token_request.coe
generate_access_token_request
get_access_token
c
generate_access_token_request.to_json.gsub("")
generate_access_token_request.to_json
generate_access_token_request.response_code
generate_access_token_request
generate_access_token_request.response
generate_access_token_request.status
generate_access_token_request
res
generate_access_token_request["access_token"]
generate_access_token_request[":access_token"]
generate_access_token_request[:"access_token"]
generate_access_token_request["access_token"]
generate_access_token_request[:access_token]
generate_access_token_request
c
generate_access_token_request
generate_access_token
c
body
get_access_token
c
get_access_token
c
payload
c
ENV["QUERY_URL"]
ENV
payload
c
